// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: products.sql

package db

import (
	"context"
)

const readCategoryProduct = `-- name: ReadCategoryProduct :many
SELECT product_id, product_name, product_image, quantity, created_on, price, delivery_price, product_desc, gender, category_id, category_name, country_id, country_name FROM v_products WHERE category_id = $1
`

func (q *Queries) ReadCategoryProduct(ctx context.Context, categoryID int32) ([]VProduct, error) {
	rows, err := q.db.QueryContext(ctx, readCategoryProduct, categoryID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []VProduct
	for rows.Next() {
		var i VProduct
		if err := rows.Scan(
			&i.ProductID,
			&i.ProductName,
			&i.ProductImage,
			&i.Quantity,
			&i.CreatedOn,
			&i.Price,
			&i.DeliveryPrice,
			&i.ProductDesc,
			&i.Gender,
			&i.CategoryID,
			&i.CategoryName,
			&i.CountryID,
			&i.CountryName,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
